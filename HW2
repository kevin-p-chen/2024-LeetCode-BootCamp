q1
class Solution(object):
    def myAtoi(self, s):
        i = 0
        n = len(s)
        result = 0
        is_negative = False  
        while i < n and s[i] == ' ':
            i += 1
        if i < n and s[i] in ('-', '+'):
            is_negative = s[i] == '-'
            i += 1
        while i < n and s[i].isdigit():
            result = result * 10 + int(s[i])
            i += 1
        if is_negative:
            result = -result
        INT_MIN, INT_MAX = -2**31, 2**31 - 1
        if result < INT_MIN:
            return INT_MIN
        if result > INT_MAX:
            return INT_MAX
        return result

q2
class Solution(object):
    def characterReplacement(self, s, k):
        count = {} 
        left = 0
        max_count = 0  
        max_length = 0 
        for right in range(len(s)):
            count[s[right]] = count.get(s[right], 0) + 1
            max_count = max(max_count, count[s[right]])
            if (right - left + 1) - max_count > k:
                count[s[left]] -= 1
                left += 1
            max_length = max(max_length, right - left + 1)
        return max_length

q3
I have midterms this week and I spent 1 hour on it and was not able to solve any of the test cases. So I wasn't able to finish it. I will do it this week when I have more time.
        
